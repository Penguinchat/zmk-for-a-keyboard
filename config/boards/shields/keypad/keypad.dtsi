/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,underglow = &led_strip;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) 
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) 
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) 
            RC(3,0) RC(3,1) RC(3,2) RC(3,3)
            RC(4,0) RC(4,1) RC(4,2)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";

        diode-direction = "col2row";
		col-gpios
			= <&gpio0 20 GPIO_ACTIVE_HIGH>
			, <&gpio0 22 GPIO_ACTIVE_HIGH>
			, <&gpio0 17 GPIO_ACTIVE_HIGH>
			, <&gpio0 15 GPIO_ACTIVE_HIGH>
      , <&gpio0 26 GPIO_ACTIVE_HIGH>
			;
		row-gpios
			= <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;

    };

    one_encoder: encoder_one {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    two_encoder: encoder_two {
        compatible = "alps,ec11";
        a-gpios = <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    three_encoder: encoder_three {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&one_encoder &two_encoder &three_encoder>;
        triggers-per-rotation = <20>;
};


    ext-power {
        compatible = "zmk,ext-power-generic";
        label = "EXT_POWER";
        control-gpios = <&gpio1 9 GPIO_ACTIVE_HIGH>;
        init-delay-ms = <50>;
    };

     vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
    };

};

&pinctrl {
   
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 7)>; // WS2812_VEXT_DATA
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 7)>;
            low-power-enable;
        };
    };
};

&uart0 {
	status = "disabled";
};

&spi3 {
	compatible = "nordic,nrf-spim";
	status = "okay";

	pinctrl-0 = <&spi3_default>;
	pinctrl-1 = <&spi3_sleep>;
	pinctrl-names = "default", "sleep";


	led-strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "LED-STRIP";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <17>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};
/ {
    led_remap: led_remap {
        compatible = "zmk,led-strip-remap";
        label = "LED_REMAP";
        chain-length = <17>; // 必须与物理LED数量一致
        led_strip = <&led_strip>;
        
        // 像素重映射表（根据键盘布局调整）
        map = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16>;
        
        // 切层灯配置
        layer_indicator: layer_indicator {
            label = "LAYER_INDICATOR";
            led_indexes = <16>; // 使用第3个物理LED作为层指示灯
            
            // 各层颜色配置（RGB格式）
            layer_0_color = [FF 00 00]; // 红色
            layer_1_color = [FF FF 00]; // 黄色
            layer_2_color = [00 00 FF]; // 蓝色
            layer_3_color = [00 FF 00]; // 绿色
        };
        
    };
};
/ {
    behaviors {
        disable_layer_led: disable_layer_led {
            compatible = "zmk,behavior-custom";
            label = "DISABLE_LAYER_LED";
            #binding-cells = <0>;
        };
    };
};
